function hidePlanTabs() {
  $(".all-filters-row").hide();
  $("ul[role='tablist'] li[role='presentation']").each(function(idx, ele) {
    $(ele).removeClass("active");
  });
}

function combineAllPlanSelectors(planSelectors) {
  var baseSelector = $(".plan-row");
  var combinedSelectors = baseSelector;
  combinedSelectors.hide();
  for (var i = 0; i < planSelectors.length; i++) {
    combinedSelectors = combinedSelectors.filter(planSelectors[i]);
  }
  combinedSelectors = filterPlanByRange("premium", combinedSelectors);
  combinedSelectors = filterPlanByRange("deductible", combinedSelectors);
  combinedSelectors = filterPlanBySelect("carrier", combinedSelectors);
  combinedSelectors = filterPlanBySelect("hsa-eligibility", combinedSelectors);
  combinedSelectors = filterPlanBySelect("osse-eligibility", combinedSelectors);
  combinedSelectors.show();
}

function filterPlanBySelect(type, combinedSelectors) {
  var carrier = $("select.plan-"+type+"-selection-filter").val();
  if (carrier == "" || carrier == undefined) {
    return combinedSelectors;
  } else {
    var selectors = combinedSelectors.filter(function(){
      return (carrier == $(this).data("plan-"+type));
    });
    return selectors;
  }
}

function filterPlanByRange(type, combinedSelectors) {
  var from = parseFloat($("input.plan-metal-"+type+"-from-selection-filter").val().replace(/[^\d\.]/g,''));
  var from = from || 0; //default to 0 if NaN

  var to = parseFloat($("input.plan-metal-"+type+"-to-selection-filter").val().replace(/[^\d\.]/g,''));
  var maxTo = Math.max.apply(null, combinedSelectors.map(function(){ //find max 'type' value in all plans
    return parseFloat($(this).data("plan-metal-"+type).toString().replace(/[^\d\.]/g,''));
  }));
  var to = to || maxTo; //default to max value if NaN

  var filteredPlanSelectors = combinedSelectors.filter(function(){
    var premium = parseFloat($(this).data("plan-metal-"+type).toString().replace(/[^\d\.]/g,''));
    return (premium >= from && premium <= to);
  });
  return filteredPlanSelectors;
}

function applyPlanFilterCBs(cbKlass, cbFilterKlass, planValueTag) {
  var selectedPlanTypes = [];
  var spCheckboxes = $('input.' + cbKlass + ':checked');
  if (spCheckboxes.length > 0) {
    spCheckboxes.each(function(idx, ele) {
      var ptName = $(ele).attr(cbFilterKlass);
      var qstring = "[" + planValueTag  + "='" + ptName + "']";
      selectedPlanTypes.push(qstring);
    });
    return $(selectedPlanTypes.join(", "));
  } else {
    return $("[" + planValueTag + "]");
  }
}




// Only load this script on the plan shopping page
  if (window.location.pathname.includes('/insured/plan_shoppings')) {

  // Setup an interval to look for [data-plans-loading] presence
  // If it is not present, we can assume the plans are loaded
  let intervalId = setInterval(checkPlansLoadedState, 500);
  var ogPlanSort; // stores original plan sort order
  function checkPlansLoadedState() {
    const loading = document.querySelector('[data-plans-loading]');
    if (!loading) {
      clearInterval(intervalId);
      initSorts();
    } else {
      console.log('Plans are still loading');
    }
  }

  function initSorts() {
    console.log('Plans are loaded');
    ogPlanSort = $('#all-plans #ivl_plans .plan-row')
  }
}


function applyPlanFilters() {
  var all_selectors = [
    applyPlanFilterCBs("plan-type-selection-filter", "data-plan-type", "data-plan-category"),
    applyPlanFilterCBs("plan-metal-level-selection-filter", "data-plan-metal-level", "data-plan-metal-level"),
    applyPlanFilterCBs("plan-metal-network-selection-filter", "data-plan-network", "data-plan-metal-network")
  ];
  combineAllPlanSelectors(all_selectors);
  $("strong#plans-count").text($(".plan-row:visible").length);
  $("dd#plans-count").text($(".plan-row:visible").length);
}

var plansToCompareArray = new Array();
var hbx;
var active_year;
var enrollment_kind;
var change_plan;

function maybeAddComparisonPlan(cb) {
	var new_plan = $(cb).attr("data-hios-id");
  hbx =  $(cb).attr("data-hbx-id");
  active_year =  $(cb).attr("data-plan-year");
  enrollment_kind =  $(cb).attr("data-plan-enrollment-kind");
  change_plan =  $(cb).attr("data-plan-change-plan");
	var is_checked = $(cb).prop("checked");
	if (is_checked) {
		if (plansToCompareArray.length > 3) {
      $("#ivl-plans-compare-alert").modal("show");
			var removed_id = plansToCompareArray.shift();
			var lookup_string = "input[data-hios-id='" +
				removed_id + "'].ivl-select-plan-for-comparison";
			$(lookup_string).each(function(idx, ele) {
				$(ele).attr("checked", false);
			});
		}
		plansToCompareArray.push(new_plan);
	} else {
		var tmpArray = [];
		for (var i = 0; i < plansToCompareArray.length; i++) {
			if (plansToCompareArray[i] != new_plan) {
				tmpArray.push(plansToCompareArray[i]);
			}
		}
		plansToCompareArray = tmpArray;
	}
	if (plansToCompareArray.length > 1) {
		$(".ivl-compare-selected-plans-link").show();
	} else {
		$(".ivl-compare-selected-plans-link").hide();
	}
}

function doPlanComparison(action_uri) {
	$.ajax({
		type: "GET",
	url: action_uri,
	dataType: 'script',
	data: {
		"standard_component_ids": plansToCompareArray,"hbx_enrollment_id": hbx, "active_year": active_year, "enrollment_kind": enrollment_kind,
    "change_plan": change_plan
	}
	});
}

function applyPlanSort(sort_by){
  var plandivs = $('#all-plans #ivl_plans .plan-row');
  plandivs.sort(function(a, b){
    if (sort_by == "plan-metal-premium" || sort_by == "plan-metal-deductible"){
      var keyA = parseFloat($(a).data(sort_by).toString().replace(/[^\d\.]/g,''));
      var keyB = parseFloat($(b).data(sort_by).toString().replace(/[^\d\.]/g,''));
    }else{
      var keyA = $(a).data(sort_by);
      var keyB = $(b).data(sort_by);
    }
    return (keyA > keyB) ? 1 : -1;
  });
  $("#all-plans #ivl_plans").empty().append(plandivs);
};

function updatePlanCost(elected_aptc) {
  var elected_amount = parseFloat(elected_aptc);
  var plans = $('.plan-row');
  for(var i=0; i<plans.length; i++){
    var plan = plans[i];
    var premium = parseFloat($(plan).data('plan-metal-premium'));
    var ehb_premium = parseFloat($(plan).data('plan-metal-ehb-premium'));
    var childcare_subsidy_eligible = $(plan).data('plan-childcare-subsidy-eligible');

    if (childcare_subsidy_eligible == true) {
      var premium_resp_amt = 0;
    } else {
      if ($(plan).data('can-use-aptc') == true){
        var premium_resp_amt = premium - Math.min.apply(null, [elected_amount, ehb_premium]);
      } else {
        var premium_resp_amt = premium;
      }

      if (premium_resp_amt < 0) {
        premium_resp_amt = 0;
      }
    }

    premium_resp_amt = premium_resp_amt.toFixed(2);
    $(plan).find('h2.plan-premium').html("$" + premium_resp_amt);
  };
};

function toFixedTrunc(x, n) {
  var with2Decimals = x.toString().match(/^-?\d+(?:\.\d{0,2})?/)[0];
  return with2Decimals;
}

function setMinMax(input, max_aptc) {
  if (input.value < 0) input.value = 0;
  if (input.value >= max_aptc) input.value = max_aptc.toFixed(2);
}

$(function() {
  $(document).on('click', "#select-plan-container a[role='tab'][data-toggle='tab']", function(){
		hidePlanTabs();
		$(this).parent().addClass("active");
		var attr = $(this).attr("data-plan-category-filter");
		if (typeof attr !== typeof undefined && attr !== false) {
			if (attr == "all") {
				$(".plan-row").show();
			} else {
				$(".plan-row").hide();
				var qstring = ".plan-row[data-plan-category='" + attr + "']";
				$(qstring).show();
			}
		}
  });


  $(document).on('change', '.ivl-select-plan-for-comparison', function(){
	  maybeAddComparisonPlan(this);
  });

  $(document).on('click', '.ivl-compare-selected-plans-link', function(){
		var base_url = $(this).attr("data-uri");
		doPlanComparison(base_url);
  });

  $(document).on('change', 'input[name="elected_pct"]', function(){
    var elected_pct = $("input[name='elected_pct']").val();
    //val() is returing empty, changed to attr('value')
    var elected_amount = parseFloat($('#max_aptc').attr('value')).toFixed(2) * parseFloat(elected_pct).toFixed(2);
    $('#elected_aptc').val(elected_amount.toFixed(2));
    $('#elected_aptc').attr('value', elected_amount.toFixed(2));
  });

  $(document).on('change', 'input#elected_aptc', function(){
    var elected_aptc = $(this).val();
    var max_aptc = $('input#max_aptc').val();
    $("input[name='elected_pct']").val(elected_aptc/max_aptc);
    if (max_aptc == "" || parseFloat(max_aptc) == 0){
      $("output[name='pct']").text("100");
    } else {
      $("output[name='pct']").text((elected_aptc/max_aptc*100).toFixed(0));
    }
  });

  // opens the update aptc form on the thank you page
  const updateAptc = document.getElementById("updateAptc");
  if (updateAptc) {
    document.getElementById("updateAptc").addEventListener('click', function(){
      this.classList.add('hidden');
      document.getElementById("aptcDesc").classList.add('hidden');
      document.querySelectorAll('.aptc').forEach(function(element) {
        element.classList.remove('hidden');
      });
    });
  }

  // aptc form on thank you page
  const aptcForm = document.getElementById("updateAptcForm");
  if (aptcForm) {
    const maxAptc = parseFloat(aptcForm.dataset.max);
    const minAptc = parseFloat(aptcForm.dataset.min);
    const updateUrl = aptcForm.dataset.url;

    // updates the aptc percentage on the thank you page
    const electedAptcPercentage = document.getElementById("electedAptcPercentage");
    const electedAptcAmount = document.getElementById("electedAptcAmount");

    electedAptcPercentage.addEventListener('blur', function(){
      var electedPct = parseFloat(this.value);
      if (electedPct > 100) {
        this.value = 100;
        electedAptcAmount.value = maxAptc;
      } else {
        let electedAptc = ((electedPct/100) * maxAptc);
        electedAptc = electedAptc < 0 ? 0 : electedAptc;
        if (electedAptc > parseFloat(maxAptc)) {
          electedAptc = maxAptc.toFixed(2);
          electedAptcPercentage.value = 100;
        }
        electedAptcAmount.value = electedAptc.toFixed(2);
      }
    });

    electedAptcAmount.addEventListener('blur', function(){
      var electedAptc = parseFloat(this.value);
      if (electedAptc > maxAptc) {
        this.value = maxAptc;
        electedAptcPercentage.value = 100;
      } else {
        let electedPct = (electedAptc/maxAptc) * 100;
        if (electedPct < minAptc) {
          electedPct = 100;
          this.value = minAptc.toFixed(2);
        }
        if (electedPct > 100) {
          electedPct = 100;
          this.value = maxAptc.toFixed(2);
        }
        electedAptcPercentage.value = electedPct.toFixed(0);
      }
    });

    // submits the update aptc form on the thank you page
    const submitAptcChange = document.getElementById("submitAptcChange");

    document.getElementById("submitAptcChange").addEventListener('click', function(){
      setUpdatedAptc(electedAptcAmount.value, updateUrl)
    });
  }

  // non jquery ajax post request
  function postAjax(url, data, success) {
    var params = typeof data == 'string' ? data : Object.keys(data).map(
            function(k){ return encodeURIComponent(k) + '=' + encodeURIComponent(data[k]) }
        ).join('&');

    var xhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP");
    xhr.open('POST', url);
    xhr.onreadystatechange = function() {
        if (xhr.readyState>3 && xhr.status==200) { success(xhr.responseText); }
    };
    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    var token = document.querySelector('meta[name="csrf-token"]').content;
    xhr.setRequestHeader('X-CSRF-Token', token);
    xhr.send(params);
    return xhr;
}

  function setUpdatedAptc(elected, updateUrl) {
    const electedAptcPercentage = document.getElementById("electedAptcPercentage");
    const electedAptcAmount = document.getElementById("electedAptcAmount");
    document.querySelectorAll('.aptc-percentage').forEach(function(element) {
      element.textContent = electedAptcPercentage.value;
    });
    document.querySelectorAll('.aptc-amount').forEach(function(element) {
      element.textContent = electedAptcAmount.value.toLocaleString("en-US", {style:"currency", currency:"USD"});
    });
    urlParts = updateUrl.split("?");
    var url = document.location.origin + urlParts[0]
    var params = urlParts[1] + "&elected_aptc=" + elected
    postAjax(url, params, function(data){
      response = JSON.parse(data);
      var amount = parseFloat(response['responsible_amount']).toLocaleString("en-US", {style:"currency", currency:"USD"});;
      document.getElementById("resp-amount").textContent = amount;
    });
  }

  $(document).on('click', '.all-filters-row .apply-btn', function(){
		applyPlanFilters();

    const sort_by = $('#sort_by input:checked').data('sort-by');
    applyPlanSort(sort_by);

    if ($('.aptc').length > 0){
      var elected_aptc = $("input#elected_aptc").val();
      var coverage_kind = $("input#coverage_kind").val();
      var market_kind = $("input#market_kind").val();
      updatePlanCost(elected_aptc);
      $.ajax({
        type: "POST",
        url: $('#set_elected_aptc_url').val(),
        data: {
          'elected_aptc': elected_aptc,
          'market_kind': market_kind,
          'coverage_kind': coverage_kind
        },
        success: function(data){
          response = JSON.parse(JSON.stringify(data));
          console.log(response.checkbook_url);
          $("#plan_match_redirection .modal-footer a").attr("href",response.checkbook_url);
        },
      });
    };
  });

  $(document).on('click', '.all-filters-row .reset-btn', function(){
    resetAptc();
    resetFilters();
    applyPlanFilters();
  });

  function resetAptc() {
    if ($('.aptc').length > 0){
      let element = document.querySelector('#elected_aptc');
      let original_aptc = element.dataset.elected;
      element.value = original_aptc;
      element.dispatchEvent(new Event('change', { bubbles: true }));
    }
  }

  function resetFilters(){

    $("#filter-sidebar input[type='checkbox']").prop("checked", false);
    $("#filter-sidebar input[type='text'].plan-metal-premium-from-selection-filter").val("");
    $("#filter-sidebar input[type='text'].plan-metal-premium-to-selection-filter").val($('#max_total_employee_cost').val());
    $("#filter-sidebar input[type='text'].plan-metal-deductible-from-selection-filter").val("");
    $("#filter-sidebar input[type='text'].plan-metal-deductible-to-selection-filter").val($('#max_deductible').val());

    $("#filter-sidebar select.plan-hsa-eligibility-selection-filter").val("");
    $("#filter-sidebar select.plan-carrier-selection-filter").val("");

    $("#filter-sidebar input[type='radio']").prop("checked", false);

    $("#all-plans #ivl_plans").empty().append(ogPlanSort);

    if (!disableSelectric) {
      $("#filter-sidebar select.plan-carrier-selection-filter").prop('selectedIndex', 0).selectric('refresh');
      $("#filter-sidebar select.plan-hsa-eligibility-selection-filter").prop('selectedIndex', 0).selectric('refresh');
      $("#filter-sidebar select.plan-osse-eligibility-selection-filter").prop('selectedIndex', 0).selectric('refresh');
    }
  }

  $(document).on('click', "#ivl_plans .plan-select.btn-default.select", function(e){
    var url = $(this).data('url');
    if ($('.aptc').length > 0){
      var elected_aptc = $("input#elected_aptc").val();
      url = url + "&elected_aptc=" + elected_aptc;
    };
    window.location.href= url;
  });
});


$(document).on("click", ".reference_plan_info h4 span", function() {
  $(this).parents(".reference_plan_info").find('.content').toggle();
});

function disableSelectricInModal() {
  $('#waive_confirm').on('shown.bs.modal', function (e) {
    $('select#waiver_reason_selection_dropdown').selectric('destroy');
  })
}

// show the dependent table when the primary's name is clicked
$(document).on("click", "#dependentList", function(event) {
  event.preventDefault();
  $("#dependentTable").toggleClass('hidden');
});
