@import 'colors';

// layout
body {
  background-color: var(--body-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// for content we want to always be at the bottom of the page
.nm-content {
  height: calc(100vh - 175px);
  overflow-y: auto;
}

// component - internal log in page
.special-cover-header,
#special-cover-header {
  display: block;
  max-width: 100%;
  max-height: 100%;
  margin-top: 30px;
  margin-left: auto;
  margin-right: auto;
  border: 1px solid var(--info-tint);
}

// component - sort seps
#sort_notification_msg {
  display: none;
  opacity: 1;
  border-color: var(--success-tint);
  max-width: 466px;
  margin-left: 295px;

  &.success,
  .success {
    background-color: var(--success-tint);
  }

  &.error,
  .error {
    background-color: var(--error-tint);
  }
}

// old component styles pre-bs4
.nav-stacked li {
  padding: $spacer;
  margin-bottom: ($spacer * 0.25);
  width: 100%;
  background: var(--grey-010);
  color: var(--info-color);

  a {
    color: var(--info-color);
  }

  &.activer {
    background: var(--info-color);
    color: var(--grey-000);
    a {
      color: var(--grey-000);
    }
  }

  &.active {
    @extend .font-weight-bold;
  }
}

// component - pre-ps4 customization
.tax_credit_field_container {
  height: 44px !important;
}

// component / utility - card
.card {
  border: 1px solid var(--grey-060);
  border-radius: 5px;
  margin-bottom: $spacer;
  padding: 13px 12px;
  background: var(--grey-000);

  hr {
    margin: 0;
    width: 100%;

    &.subcard-divider {
      border-top: 1px solid var(--grey-030);

      &:last-child {
        display: none;
      }
    }
  }
}

.card-body {
  flex: 1 1 auto;
  min-height: 1px;
  padding: 0.25rem;
}

// component - investigate why not just using hidden classes
.verification-update-reason, .return-for-def-reason, .fedhub-request, .extend-request, .view-history {
  display: none;
}

// component - modals
.backdrop-modal {
  .modal-header {
    border-bottom: 0;
  }

  .modal-footer {
    border-top: 0;
  }
}

.modal-backdrop.in {
  background-color: rgba(0, 0, 0, 0.01);
}

// component - accordion
.accordion {
  .accordion-header {
    padding-bottom: $spacer;
    border-bottom: 1px solid var(--grey-060);

    &:after {
      content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="6" viewBox="0 0 12 6" fill="none"><path d="M1 5.5L5.29289 1.20711C5.68342 0.816583 6.31658 0.816582 6.70711 1.20711L11 5.5" stroke="%23323130" stroke-linecap="round" stroke-linejoin="round"/></svg>');
      float: right;
    }
  }

  .accordion-header.collapsed {
    padding-bottom: 0;
    margin-bottom: 0;
    border-bottom: none;

    &:after {
      content: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="6" viewBox="0 0 12 6" fill="none"><path d="M11 0.5L6.70711 4.79289C6.31658 5.18342 5.68342 5.18342 5.29289 4.79289L1 0.5" stroke="%23323130" stroke-linecap="round" stroke-linejoin="round"/></svg>');
    }
  }
}

// pagination, move to own partial
.pagination {
  li {
    &.page-item {
      a {
        color: var(--primary-color);
        font-weight: 600;
        text-decoration: none;
      }

      &.active:hover a {
        background-color: var(--primary-color-darker);
      }

      &:hover:not(.active):not(.disabled) a {
        background-color: var(--grey-020);
      }
    }

    &.active.page-item a {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      color: var(--grey-000);
    }
    // these are for datatable pagination
    &.paginate_button {
      position: relative;
      display: block;
      padding: 0.5rem 0.75rem;
      margin-left: -1px;
      line-height: 1.25;
      background-color: var(--grey-000);
      border: 1px solid var(--grey-020);

      a {
        color: var(--primary-color);
        font-weight: 600;
        text-decoration: none;
      }

      &.active:hover {
        background-color: var(--primary-color-darker);
      }

      &:hover:not(.active):not(.disabled) {
        background-color: var(--grey-020);
      }
    }

    &.active.paginate_button {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      a { color: var(--grey-000)}
    }

    &.paginate_button.previous {
      border-top-left-radius: 0.25rem;
      border-bottom-left-radius: 0.25rem;
      border-color: var(--grey-030);
    }

    &.paginate_button.next {
      border-top-right-radius: 0.25rem;
      border-bottom-right-radius: 0.25rem;
      border-color: var(--grey-030);
    }
  }
}

// component - family home page
.home-widget {
  background-color: var(--grey-000);
  border: 1px solid var(--grey-060);
}

// component - glossary items
.glossary {
  color: var(--primary-color);
  border-bottom: 1px dashed var(--primary-color);
  cursor: pointer;
}

// components - inbox
.delete-icon {
  color: var(--status-red);
}

// component - tab boxes
.tab-holder {
  margin-bottom: 6px;
}

.tab,
.ui-tabs-tab {
  border: none;
  padding: 1.25ch 1ch 1.1ch;
  font-size: 1rem;
  font-weight: 600;
  color: var(--default-font-color);
  background: var(--tertiary-tint);
  border-radius: 5px 5px 0 0;
}

.tab.active,
.ui-tabs-tab.ui-tabs-active {
  background: #ffffff;
  color: var(--primary-color);
  border-top: 1px solid var(--grey-060);
  border-left: 1px solid var(--grey-060);
  border-right: 1px solid var(--grey-060);
  border-bottom: 1px solid var(--grey-000);
}

.tab-container {
  margin-top: 7px;
  border: 1px solid var(--grey-060);
}

// component - message inbox
.msg-inbox {
  cursor: pointer;

  &.msg-inbox-read {
    td {
      font-weight: 400;
    }
  }

  &.msg-inbox-unread {
    td {
      font-weight: 600;
    }
  }

  &:hover {
    background-color: var(--grey-020);
  }
}

.msg-active {
  color: var(--grey-130);
  font-weight: 600;
}

// component - plan shopping filters
.filter-input-block legend.bb,
.sort-area legend {
  padding-bottom: ($spacer / 2);
  border-bottom: 1px solid var(--body-divider);
}

.filter-input-block legend.bb,
.sort-area legend {
  padding-bottom: ($spacer / 2);
  border-bottom: 1px solid var(--body-divider);
}

// components - admin action drops
.actions-dropdown {
  border: 1px solid var(--grey-100);

  .dropdown-item {
    color: inherit;
    text-decoration: inherit;

    &:hover,
    &:focus {
      background-color: var(--complete-tint);
      font-weight: 600;
    }

    &:last-child {
      border-bottom-right-radius: 4px;
      border-bottom-left-radius: 4px;
    }

    &:first-child {
      border-top-right-radius: 4px;
      border-top-left-radius: 4px;
    }
  }

  .no-actions {
    pointer-events: none;
    color: var(--grey-100);
  }
}

// component - sep page
.qle-menu {
  li::marker {
    color: var(--primary-color);
  }
}

// end components

// utility classes
.hide,
.hidden {
  @extend .sr-only;
  visibility: hidden;
}

.hidden_field {
  display: none;
}

.primary-blue {
  color: var(--theme-primary-blue, #007bc4);
}

div.disabled *:not(:has(*)):not(button, a.button),
div.disabled ::after {
  opacity: 0.4;
}

a.disabled {
  pointer-events: none;
  cursor: not-allowed;
}

.float-end {
  float: inline-end;
}

.full-height {
  height: 70vh;
}

// utility used for displaying list: value type data when we want the values to start at the same spot
dl.parent {
  display: grid;
  grid-template-columns: auto 1fr !important; // !important is needed to override the styles used in enrollment.scss that can be deleted when bs4 flag is removed and bs4 is default
  grid-row-gap: 4px;
  list-style: none;
  padding: 0;
  margin: 0;
  margin-bottom: 3ch;
  grid-auto-rows: min-content;
}

dd,
dt {
  margin: 0;
  padding: 0;
}

dt {
  font-weight: 600;
  color: var(--text-secondary);
  padding-right: 2ch;
}

dl.parent.weight-n {
  dt {
    font-weight: 400;
    color: var(--default-font-color);
    padding-right: 2ch;
  }
}

.pre-line {
  white-space: pre-line;
}

.two-column {
  @include media-breakpoint-up(sm) {
    columns: 2;
  }
}
