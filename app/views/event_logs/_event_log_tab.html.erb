<div class="event-log-tab">
  <div>
    <h1><b><%= l10n("audit_log") %></b></h1>
    <h3><b><%= name %></b></h3>
    <% if !@event_logs&.any?%>
      <p><%= type === 'consumer' ? l10n("event_log.empty_consumer") : l10n("event_log.empty_employer") %>
    <% else %>
    <% if type == 'consumer' %>
      <p><b><%= l10n("Account") %> <%= l10n("Primary") %>:</b> <%= l10n("Self") %></p>
      <p><b><%= l10n("event_log.hbx_id_text") %></b> <%= hbx_id %></p>
      <p><%= l10n("event_log.ivl_action") %></p>
    <% else %>
      <p><b><%= l10n("event_log.hbx_id_text") %></b> <%= hbx_id %></p>
      <p><%= l10n("event_log.shop_action") %></p>
    <% end %>

    <div class="filters-container">
      <div>
        <span id="filters-toggle" class="filters-toggle">
          <span class="glyphicon glyphicon-chevron-right" id="filters-arrow"></span>
          <span class="filters-text" ><%= l10n("event_log.filters") %></span>
        </span>
      </div>
      <form class="filters" id="filters">
        <h2><%= l10n("event_log.eligibility") %> <%= l10n("Details") %></h2>
        <div class="filter-row">
          <% if type == 'consumer' %>
          <div class="filter" id="subjectFilter">
            <label for="<%= l10n("subject").downcase %>"><%= l10n("Subject") %></label>
            <dl class="dropdown">
              <dt>
              <div class="fake-select" style="display: flex;align-items: center;">
                <span class="fake-select-label">All</span>
                <p class="multiSel"></p>
              </div>
              </dt>
              <dd>
                <div class="mutliSelect">
                  <ul>
                    <li><label><input type="checkbox" name="subject" value="all" checked/>All</label></li>
                    <% if members&.any? %>
                    <% members.uniq.each do |member| %>
                      <li><label><input type="checkbox" name="subject" value="<%= member %>" checked/><%= member %></label></li>
                    <% end %>
                    <% end %>
                  </ul>
                </div>
              </dd>
            </dl>
          </div>
          <% end %>
          <div class="filter">
            <label for="<%= l10n("event_log.select_eligibility") %>">Type</label>
            <dl class="dropdown">
              <dt>
                <div class="fake-select" style="display: flex;align-items: center;">
                  <span class="fake-select-label">All</span>
                  <p class="multiSel"></p>
                </div>
              </dt>
              <dd>
                <div class="mutliSelect">
                  <ul>
                    <li><label><input type="checkbox" name="eligibility" value="all" checked/>All</label></li>
                    <% if @event_logs %>
                      <% @event_logs.map{|event_log| event_log[:title]&.upcase }.uniq.each do |category| %>
                        <li><label><input type="checkbox" name="eligibility" value="<%= category %>" checked/><%= category %></label></li>
                      <% end %>
                    <% end %>
                  </ul>
                </div>
              </dd>
            </dl>
          </div>
          <div class="filter">
            <label for="<%= l10n("status").downcase %>"><%= l10n("status") %></label>
            <dl class="dropdown">
              <dt>
              <div class="fake-select" style="display: flex;align-items: center;">
                <span class="fake-select-label"><%= l10n("All") %></span>
                <p class="multiSel"></p>
              </div>
              </dt>
              <dd>
                <div class="mutliSelect">
                  <ul>
                    <li><label><input type="checkbox" name="status" value="all" checked/>All</label></li>
                    <li><label><input type="checkbox" name="status" value="eligible" checked/><%= l10n("eligible") %></label></li>
                    <li><label><input type="checkbox" name="status" value="ineligible" checked/><%= l10n("ineligible") %></label></li>
                  </ul>
                </div>
              </dd>
            </dl>
          </div>
          <div class="filter">
            <label for="effective-on"><%= l10n("Effective On") %></label>
            <input placeholder="MM/DD/YYYY" type="date" max="9999-12-31" id="effective-on">
          </div>
        </div>
        <h2><%= l10n("Event") %> <%= l10n("Details") %></h2>
        <div class="filter-row">
          <div class="filter">
            <label for="<%= l10n("status").downcase %>"><%= l10n("event_log.action_taken") %></label>
            <dl class="dropdown">
            <dt>
              <div class="fake-select" style="display: flex;align-items: center;">
                <span class="fake-select-label"><%= l10n("All") %></span>
                <p class="multiSel"></p>
              </div>
            </dt>
            <dd>
              <div class="mutliSelect">
                <ul>
                  <li><label><input type="checkbox" name="action_taken" value="all" checked/>All</label></li>
                  <% if @event_logs %>
                    <% @event_logs.map{|event_log| event_log[:detail] }.uniq.each do |category| %>
                      <li><label><input type="checkbox" name="action_taken" value="<%= category %>" checked/><%= category %></label></li>
                    <% end %>
                  <% end %>
                </ul>
              </div>
            </dd>
            </dl>
          </div>
          <div class="filter">
            <label for="user-id"><%= l10n("event_log.hbx_id_email") %></label>
            <input type="text" id="user-id">
          </div>
          <div>
          <div class="sub-filter-row">
          <div class="filter">
            <label for="start-date"><%= l10n("event_log.start_date") %></label>
            <input placeholder="MM/DD/YYYY" max="9999-12-31" type="date" id="start-date">
          </div>
          <div class="between-input-label"><%= l10n("to") %></div>
          <div class="filter">
            <label>&nbsp;</label>
            <input type="date" id="end-date" max="9999-12-31" disabled aria-label="<%= l10n("event_log.end_date") %>">
          </div>
          </div>
          </div>
        </div>
        <div class="run-query">
          <button id="reset-filters" class="button-ghost"><%= l10n("Reset Filters") %></button>
          <button id="run-query" class="button-primary"><%= l10n("Search") %></button>
        </div>
      </div>
    </div>

    <div class="event-log-header">
      <div class="event-log-export-text">
        <h3><b><%= type === "consumer" ? l10n("event_log.table_label_consumer") + hbx_id : l10n("event_log.table_label_employer")%></b></h3>
        <a href="#" id="export-table" class="button button-primary"><%= l10n("Export") %> <%= l10n("to") %> CSV</a>
      </div>
    </div>
    <div id="event-table-data">
      <table id="event-log-table" class="table">
        <thead>
        <tr class="">
          <th><span class="glyphicon glyphicon-chevron-right" id="log-expansion-icon" onclick="toggleShowAllRows()"></span></th>
          <th><%= l10n("Subject") %></th>
          <th><%= l10n("event_log.eligibility") %></th>
          <th><%= l10n("event_log.eligibility") %> <%= l10n("Status") %></th>
          <th><%= l10n("Effective") %></th>
        </tr>
        </thead>
        <tbody>
        <% if @event_logs&.any? %>
          <% sets = @event_logs.group_by{|e| [e[:subject], e[:title]]} %>
          <% sets.each_with_index do |(event_log, details), index| %>
            <tr class="primary-row" id="<%= index %>"%>
              <td><span class="glyphicon glyphicon-chevron-right"></span></td>
              <% if type == 'consumer' %>
                <td class="subject"><%= event_log[0] %></td>
              <% else %>
                <td class="subject"><%= event_log[0] %></td>
              <% end %>
              <td class="eligibility"><%= event_log[1]&.upcase %></td>
              <td class="status"><%= details[0][:current_state]&.titleize %></td>
              <td class="effective-on"><%= details[0][:effective_on]&.strftime("%m/%d/%Y") %></td>
            </tr>
            <tr class="secondary-header" id="<%= index %>">
              <td colspan="2"></td>
              <th><%= l10n("Event Details") %></th>
              <th><%= l10n("event_log.account_label") %></th>
              <th><%= l10n("Account (Date/Time)") %></th>
            </tr>
            <% details.each do |detail| %>
            <tr class="detail-row" data-event-id="<%= detail[:_id] %>" id="<%= index %>">
              <td colspan="2"></td>
              <td class="action-taken"><%= detail[:detail] %></td>
              <td id="<%= detail[:account_hbx_id] %>" class="user_id"><%= detail[:account_username] %></td>
              <td class="event-time"><%= detail[:event_time] %></td>
            </tr>
            <% end %>
          <% end %>
        <% end %>
        </tbody>
      </table>
    </div>
    <div id="no-results" style="display:none"><%= l10n("event_log.no_results") %></div>
  </div>
  <% end %>
</div>

<script>
  // clean up old code!!
  // note here to clean up styles!!
  $(document).ready(function() {
    // DOM elements
    const filtersToggle = $('#filters-toggle');
    const filters = $('#filters');
    const arrow = $('#filters-arrow');
    const runQueryButton = $('#run-query');
    const exportTableButton = $('#export-table');
    const categoryFilter = $('#eligibility');
    const accountFilter = $('#user-id');
    const startDateFilter = $('#start-date');
    const endDateFilter = $('#end-date');
    const hbx_id = <%= sanitize hbx_id.to_json %>;

    // Event handler for start date change
    startDateFilter.on('change', function() {
      const startDate = new Date(startDateFilter.val());
      startDate.setDate(startDate.getDate() + 1);
      endDateFilter.prop('disabled', false);
      endDateFilter.attr('min', formatDate(startDate));
    });

    // Function to format date
    function formatDate(date) {
      const year = date.getFullYear();
      const month = String(date.getMonth() + 1).padStart(2, '0');
      const day = String(date.getDate()).padStart(2, '0');
      return `${year}-${month}-${day}`;
    }

    // Event handler for filters toggle
    filtersToggle.on('click', function() {
      const isFiltersHidden = filters.css('display') === 'none';
      filters.css('display', isFiltersHidden ? 'block' : 'none');
      arrow.toggleClass('glyphicon-chevron-right glyphicon-chevron-down');
    });

    if ($('tr.primary-row:visible').length === 0) {
      disableExportButton();
    }
  });

  function enableExportButton() {
    $('#export-table').show();
  }

  function disableExportButton() {
    $('#export-table').hide();
  }

  // Handle click event for csv export
  $('#export-table').on('click', function(event) {
    event.preventDefault();

    var eventIds = [];
    $('.primary-row').each(function() {
      var primaryRowId = $(this).attr('id');

      if ($(this).is(':visible')) {
        var detailRows = $('.detail-row:visible[id="' + primaryRowId + '"]');

        detailRows.each(function() {
          var eventId = $(this).data('event-id');
          eventIds.push(eventId);
        });
      }
    });

    var url = '/event_logs.csv?' + $.param({ events: eventIds });
    window.location.href = url;
  });

  function showFilters() {
    $('.filters-container').css('visibility', 'visible');
  }

  function hideFilters() {
    $('.filters-container').css('visibility', 'hidden');
  }

  function toggleShowAllRows() {
    if (!$('#event-log-table thead tr').hasClass('showing')) {
      $('#event-log-table tbody tr:not(.primary-row):not(.hidden-by-filters)').show();
      $('table .glyphicon' ).removeClass('glyphicon-chevron-right')
      $('table .glyphicon' ).addClass('glyphicon-chevron-down')
    } else {
      $('#event-log-table tbody tr:not(.primary-row)').hide();
      $('table .glyphicon' ).addClass('glyphicon-chevron-right')
      $('table .glyphicon' ).removeClass('glyphicon-chevron-down')
    }
    $('#event-log-table thead tr').toggleClass('showing')
  }

  $('.primary-row').click(function(){
    $(this).find('.glyphicon-chevron-right, .glyphicon-chevron-down').toggleClass('glyphicon-chevron-right glyphicon-chevron-down')
    $(this).nextAll('tr:not(.hidden-by-filters)').each( function() {
      if ($(this).hasClass('primary-row')) {
        return false;
      }
      $(this).toggle();
    });
    if ($('tr.primary-row:visible').length === $('tr.primary-row:visible .glyphicon-chevron-down').length) {
      $('#event-log-table thead tr').addClass('showing')
      $("#log-expansion-icon").removeClass('glyphicon-chevron-right')
      $("#log-expansion-icon").addClass('glyphicon-chevron-down')
    } else {
      $('#event-log-table thead tr').removeClass('showing')
      $("#log-expansion-icon").addClass('glyphicon-chevron-right')
      $("#log-expansion-icon").removeClass('glyphicon-chevron-down')
    }
  });

$(".dropdown dt .fake-select").on('click', function() {
  if (!$(this).closest('.dropdown').find("dd ul").hasClass('open')) {
    $(".dropdown dd ul").removeClass('open');
    $(".dropdown").find("dd ul").hide();
    $(this).closest('.dropdown').find("dd ul").addClass('open');
    $(this).closest('.dropdown').find("dd ul").slideToggle('fast');
  } else {
    $(this).closest('.dropdown').find("dd ul").hide();
    $(this).closest('.dropdown').find("dd ul").removeClass('open');
  }
});

$(".dropdown dd ul li .fake-select").on('click', function() {
  $(this).closest('.dropdown').find("dd ul").hide();
});

$(document).bind('click', function(e) {
  var $clicked = $(e.target);
  if (!$clicked.parents().hasClass("dropdown")) $(".dropdown dd ul").hide();
});

$('.mutliSelect input[type="checkbox"]').on('click', function() {
  var label = $(this).closest('.dropdown').find('.fake-select-label');
  var boxes = $(this).closest('.dropdown').find('input[type="checkbox"]');
  if ($(this).val() === 'all') {
    $(this).removeClass('partial-all');
    boxes.prop('checked', this.checked);
    label.text("All");
  } else {
    var checked_count =  $(this).closest('.mutliSelect').find('input:checked').length
    if (checked_count !== boxes.length && checked_count !== 0) {
      $(this).closest('.mutliSelect').find('input[value="all"]').prop('checked', false).addClass('partial-all')
    } else {
      $(this).closest('.mutliSelect').find('input[value="all"]').removeClass('partial-all')
    }
    label.text(checked_count + " Selected");
  }
});

  // filter the data on the page
  $('#run-query').on('click', function(event) {
    event.preventDefault();

    // reset visibility before running a new search
    $('#event-log-table tbody tr').each(function( index ) {
      $(this).show();
      $(this).removeClass("hidden-by-filters");
    });

    var subjects = [],
        eligibilities = [],
        statuses = [],
        visible_rows = [];
        actions_taken = [];

    $('input[name="subject"]:checked').each(function( index ) {
      subjects.push($(this).val().toUpperCase())
    });
    $('input[name="eligibility"]:checked').each(function( index ) {
      eligibilities.push($(this).val().toUpperCase())
    });
    $('input[name="status"]:checked').each(function( index ) {
      statuses.push($(this).val().toUpperCase())
    });
    $('input[name="action_taken"]:checked').each(function( index ) {
      actions_taken.push($(this).val().toUpperCase())
    });

    $('#event-log-table tbody tr').each(function( index ) {
      var row = $(this).prop('id');
      var row_index = visible_rows.indexOf(row)
      if (row_index === -1) {
        visible_rows.push($(this).prop('id'))
      }
    });

    // subject filter
    // have to check for visibilitiy so it doesn't filter out all rows automatically
    // for employer flow
    if ($('#subjectFilter').is(":visible") && !subjects.includes("ALL")){
      $('td.subject').each(function( index ) {
        var row = $(this).closest('tr').prop('id');
        var row_index = visible_rows.indexOf(row)
        if (!subjects.includes($(this).text().toUpperCase()) && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      });
    }

    // eligibility type filter
    if (!eligibilities.includes("ALL")){
      $('td.eligibility').each(function( index ) {
        var row = $(this).closest('tr').prop('id');
        var row_index = visible_rows.indexOf(row)
        if (!eligibilities.includes($(this).text().toUpperCase()) && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      });
    }

    // eligibility status filter
    if (!statuses.includes("ALL")){
      $('td.status').each(function( index ) {
        var row = $(this).closest('tr').prop('id');
        var row_index = visible_rows.indexOf(row)
        if (!statuses.includes($(this).text().toUpperCase()) && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      });
    }

    // effective on filter
    // verified with delivery manager this is just an exact match
    if ($('#effective-on').val()) {
      value = $('#effective-on').val()
      $('td.effective-on').each(function( index ) {
        var row = $(this).closest('tr').prop('id');
        var row_index = visible_rows.indexOf(row);
        var parsedDate = new Date($(this).text());
        var start = new Date(value)
        // set to same time of day so they match
        start.setUTCHours(0,0,0,0)
        parsedDate.setUTCHours(0,0,0,0)
        if (isNaN($(this).text()) && !isNaN(parsedDate)) {
          if (!(start.getTime() === parsedDate.getTime()) && row_index !== -1) {
            visible_rows.splice( row_index, 1 );
          }
        }
      });
    }

    // event detail filters
    // because these are nested, need to check each row
    $('tr.primary-row').each(function( index ) {
      var row = $(this).prop('id');
      var row_index = visible_rows.indexOf(row);
      var action_dates = []
      var detail_rows = []
      $('td.event-time').each(function( index ) {
        if ($(this).closest('tr').prop('id') === row) {
          detail_rows.push($(this).closest('tr'));
          action_dates.push(new Date($(this).text()).getTime());
        }
      });

      // eligibility status filter
      if (!actions_taken.includes("ALL")){
        var row_index = visible_rows.indexOf(row);
        var ok_rows = 0;

        $.each( detail_rows, function(){
          var action_taken = $(this).find('td.action-taken').text()
          if (actions_taken.includes(action_taken.toUpperCase())) {
            ok_rows += 1
          } else {
            $(this).hide().addClass("hidden-by-filters");
          }
        });
        if (ok_rows === 0 && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      }

      if ($('#user-id').val()) {
        var row_index = visible_rows.indexOf(row);
        var value = $('#user-id').val().toUpperCase();
        var ok_rows = 0;
        $.each( detail_rows, function( i, date ){
          var user_id = $(this).find('td.user_id').prop('id').toUpperCase()
          var user_email = $(this).find('td.user_id').text().toUpperCase()
          if (user_id === value || user_email === value) {
            ok_rows += 1
          } else {
            $(this).hide().addClass("hidden-by-filters");
          }
        });
        if (ok_rows === 0 && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      }

      if ($('#start-date').val()) {
        var value = $('#start-date').val()
        var ok_rows = 0
        var row_index = visible_rows.indexOf(row);
        var start = new Date(value);
        // set the start time to beginning of the day
        start.setUTCHours(0,0,0,0);
        $.each( action_dates, function( i, date ){
          if (start.getTime() < date) {
            ok_rows += 1
          } else {
            detail_rows[i].hide().addClass("hidden-by-filters");
          }
        });
        if (ok_rows === 0 && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      }

      if ($('#end-date').val()) {
        var value = $('#end-date').val()
        var ok_rows = 0
        var row_index = visible_rows.indexOf(row);
        var end = new Date(value);
        // set the end time to end of the day
        end.setUTCHours(23,59,59,999);
        $.each( action_dates, function( i, date ){
          if (end.getTime() > date) {
            ok_rows += 1
          } else {
            detail_rows[i].hide().addClass("hidden-by-filters");
          }
        });
        if (ok_rows === 0 && row_index !== -1) {
          visible_rows.splice( row_index, 1 );
        }
      }
    });

    if (visible_rows.length === 0) {
      $('#event-table-data').hide()
      $('#no-results').show()
      disableExportButton();
    } else {
      $('#event-table-data').show()
      $('#no-results').hide()
      enableExportButton();
      $('#event-log-table tbody tr').each(function( index ) {
        var row = $(this).prop('id');
        var row_index = visible_rows.indexOf(row)
        if (row_index === -1) {
          $(this).hide().addClass("hidden-by-filters");
        }
      });
    }
  });

  $('#reset-filters').click(function(){
    event.preventDefault();
    $('#event-table-data').show()
    $('#no-results').hide()
    $('.filter input[type="text"], .filter input[type="date"]').val('');
    $('.filter input[type="checkbox"]').prop('checked', true).removeClass('partial-all');;
    $('.fake-select-label').text("All");
    $('#event-log-table tbody tr').each(function( index ) {
      $(this).removeClass("hidden-by-filters");
      $(this).show();
    });
  });
</script>
