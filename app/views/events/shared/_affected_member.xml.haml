%affected_member
  %member
    %id
      %id= "urn:openhbx:hbx:dc0:resources:v1:person:hbx_id##{hbx_enrollment_member.person.hbx_id}"
    - if subscriber.person.primary_family.present?
      %primary_family_id
        %id=subscriber.person.primary_family.hbx_assigned_id
    - if hbx_enrollment_member.is_subscriber? && subscriber.person.primary_family.present? && subscriber.person.primary_family.active_household.latest_active_tax_household.present?
      %tax_household_id
        %id=subscriber.person.primary_family.active_household.latest_active_tax_household.hbx_assigned_id
    = render :partial=> "events/individuals/person", :object => hbx_enrollment_member.person, as: :person
    - if hbx_enrollment_member != subscriber && subscriber.person.person_relationship_for(hbx_enrollment_member.person).present?
      %person_relationships
        = render :partial => "events/individuals/person_relationship", :object => subscriber.person.person_relationship_for(hbx_enrollment_member.person)
    = render :partial => "events/individuals/person_demographics", :object => hbx_enrollment_member.person, as: :person_demographics
    - unless hbx_enrollment_member.family_member.is_primary_applicant.blank?
      %is_primary_applicant= hbx_enrollment_member.family_member.is_primary_applicant
    - unless hbx_enrollment_member.family_member.is_coverage_applicant.blank?
      %is_coverage_applicant= hbx_enrollment_member.family_member.is_coverage_applicant
    - unless hbx_enrollment_member.person.is_disabled.blank? && hbx_enrollment_member.person.is_tobacco_user.blank?
      %person_health
        - unless hbx_enrollment_member.person.is_tobacco_user.blank?
          %is_tobacco_user= hbx_enrollment_member.person.is_tobacco_user
        - unless hbx_enrollment_member.person.is_disabled.blank?
          %is_disabled= hbx_enrollment_member.person.is_disabled
  %is_subscriber= hbx_enrollment_member.is_subscriber
  %benefit
    %premium_amount= (hbx_enrollment.is_ivl_by_kind? ? hbx_enrollment.premium_for(hbx_enrollment_member): (hbx_enrollment.decorated_hbx_enrollment.member_enrollments.find { |enrollment| enrollment.member_id == hbx_enrollment_member.id }).product_price).to_f.round(2)
    %begin_date= simple_date_for(hbx_enrollment.effective_on)
    - if (HbxEnrollment::TERMINATED_STATUSES + ['coverage_termination_pending']).include?(hbx_enrollment.aasm_state)
      - if !hbx_enrollment.terminated_on.blank?
        %end_date= simple_date_for(hbx_enrollment.terminated_on)
    - elsif (HbxEnrollment::CANCELED_STATUSES).include?(hbx_enrollment.aasm_state)
      %end_date= simple_date_for(hbx_enrollment.effective_on)
