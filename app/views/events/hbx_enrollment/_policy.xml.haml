%policy
  %id
    %id= hbx_enrollment.hbx_id
  - if !hbx_enrollment.predecessor_enrollment_id.blank?
    %previous_policy_id
      %id= hbx_enrollment.parent_enrollment.hbx_id
  - if hbx_enrollment.broker_agency_account_for_edi
    = render :partial => "events/shared/broker", :object => hbx_enrollment, as: :hbx_enrollment
  %enrollees
    = render :partial => "events/shared/enrollee", :collection => hbx_enrollment.hbx_enrollment_members, as: :hbx_enrollment_member, :locals => { :hbx_enrollment => hbx_enrollment, :subscriber => hbx_enrollment.subscriber }
  - if hbx_enrollment.subscriber.family_member != hbx_enrollment.family.primary_applicant
    = render :partial => "events/individuals/responsible_party", :object => hbx_enrollment.family.primary_person, as: :person, :locals => {:hbx_enrollment => hbx_enrollment}
  %enrollment
    = render :partial => "events/hbx_enrollment/plan", :locals=> {:hbx_enrollment => hbx_enrollment}
    - if hbx_enrollment.is_shop?
      %shop_market
        %employer_link
          - employer = hbx_enrollment.census_employee.employer_profile
          %id
            %id= "urn:openhbx:terms:v1:employer:id##{employer.hbx_id}"
          %name= employer.legal_name
          - unless employer.dba.blank?
            %dba= employer.dba
          %fein= employer.fein
        %total_employer_responsible_amount=(hbx_enrollment.decorated_hbx_enrollment.sponsor_contribution_total).round(2).to_f
        - if hbx_enrollment.is_cobra_status?
          %cobra_eligibility_date= simple_date_for(hbx_enrollment.cobra_eligibility_date)
        - if hbx_enrollment.composite_rated?
          %composite_rating_tier_name= "urn:openhbx:terms:v1:composite_rating_tier##{hbx_enrollment.composite_rating_tier}"
    - else
      %individual_market
        %is_carrier_to_bill= (hbx_enrollment.has_child_care_subsidy? ? false : true)
        %applied_aptc_amount= (hbx_enrollment.applied_aptc_amount).round(2)
    %premium_total_amount=  (hbx_enrollment.is_ivl_by_kind? ? hbx_enrollment.total_premium : hbx_enrollment.decorated_hbx_enrollment.product_cost_total).to_f.round(2)
    %total_responsible_amount= policy_responsible_amount(hbx_enrollment)
    - if hbx_enrollment.has_premium_credits?
      = render :partial => "events/hbx_enrollment/premium_credits", :locals=> {:hbx_enrollment => hbx_enrollment}
    - if (hbx_enrollment.is_shop? || EnrollRegistry[:enroll_app].setting(:send_rating_area_for_ivl_policy_to_edi).item) && hbx_enrollment.rating_area.present?
      %rating_area= hbx_enrollment.rating_area.exchange_provided_code
    = render :partial => "events/hbx_enrollment/eligibility_event", :object => hbx_enrollment
  %request_submitted_timestamp= hbx_enrollment.created_at.strftime('%Y-%m-%dT%H:%M:%S') if hbx_enrollment.created_at
  %is_active= hbx_enrollment.is_active
