[{"severity":"convention","location":{"begin_pos":0,"end_pos":13261},"message":"Metrics/ModuleLength: Module has too many lines. [298/100]","cop_name":"Metrics/ModuleLength","status":"unsupported"},{"severity":"convention","location":{"begin_pos":0,"end_pos":6},"message":"Style/Documentation: Missing top-level module documentation comment.","cop_name":"Style/Documentation","status":"unsupported"},{"severity":"convention","location":{"begin_pos":0,"end_pos":1},"message":"Style/FrozenStringLiteralComment: Missing frozen string literal comment.","cop_name":"Style/FrozenStringLiteralComment","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":146,"end_pos":150},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":191,"end_pos":195},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":233,"end_pos":237},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":312,"end_pos":963},"message":"Metrics/CyclomaticComplexity: Cyclomatic complexity for ridp_type_status is too high. [11/10]","cop_name":"Metrics/CyclomaticComplexity","status":"unsupported"},{"severity":"convention","location":{"begin_pos":2826,"end_pos":2860},"message":"Style/SymbolProc: Pass `&:is_type_outstanding?` as an argument to `select` instead of a block.","cop_name":"Style/SymbolProc","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":4068,"end_pos":4146},"message":"Style/RedundantParentheses: Don't use parentheses around a method call.","cop_name":"Style/RedundantParentheses","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":4807,"end_pos":4831},"message":"Style/SymbolProc: Pass `&:identifier` as an argument to `any?` instead of a block.","cop_name":"Style/SymbolProc","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":4962,"end_pos":4986},"message":"Style/SymbolProc: Pass `&:identifier` as an argument to `any?` instead of a block.","cop_name":"Style/SymbolProc","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":5341,"end_pos":5363},"message":"Style/SymbolProc: Pass `&:identifier` as an argument to `select` instead of a block.","cop_name":"Style/SymbolProc","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":5807,"end_pos":5809},"message":"Style/GuardClause: Use a guard clause (`return unless @person.primary_family.active_household.hbx_enrollments.verification_needed.any?`) instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"unsupported"},{"severity":"convention","location":{"begin_pos":5807,"end_pos":5809},"message":"Style/IfUnlessModifier: Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.","cop_name":"Style/IfUnlessModifier","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":6179,"end_pos":6201},"message":"Style/SymbolProc: Pass `&:identifier` as an argument to `select` instead of a block.","cop_name":"Style/SymbolProc","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":6373,"end_pos":6375},"message":"Style/GuardClause: Use a guard clause (`return unless @person.primary_family.active_household.hbx_enrollments.verification_needed.any?`) instead of wrapping the code inside a conditional expression.","cop_name":"Style/GuardClause","status":"unsupported"},{"severity":"convention","location":{"begin_pos":6373,"end_pos":6375},"message":"Style/IfUnlessModifier: Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.","cop_name":"Style/IfUnlessModifier","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":7747,"end_pos":7870},"message":"Style/SafeNavigation: Use safe navigation (`&.`) instead of checking if an object exists before calling the method.","cop_name":"Style/SafeNavigation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":7987,"end_pos":8119},"message":"Style/SafeNavigation: Use safe navigation (`&.`) instead of checking if an object exists before calling the method.","cop_name":"Style/SafeNavigation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":8371,"end_pos":8375},"message":"Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.","cop_name":"Layout/IndentationWidth","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":8375,"end_pos":8404},"message":"Style/StringConcatenation: Prefer string interpolation to string concatenation.","cop_name":"Style/StringConcatenation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":9002,"end_pos":9006},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":9124,"end_pos":9128},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":9124,"end_pos":9246},"message":"Lint/DuplicateBranch: Duplicate branch body detected.","cop_name":"Lint/DuplicateBranch","status":"unsupported"},{"severity":"convention","location":{"begin_pos":9253,"end_pos":9257},"message":"Layout/CaseIndentation: Indent `when` as deep as `case`.","cop_name":"Layout/CaseIndentation","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":10430,"end_pos":10431},"message":"Style/BlockDelimiters: Avoid using `{...}` for multi-line blocks.","cop_name":"Style/BlockDelimiters","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":10440,"end_pos":10449},"message":"Layout/MultilineBlockLayout: Block argument expression is not on the same line as the block start.","cop_name":"Layout/MultilineBlockLayout","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":11150,"end_pos":11151},"message":"Style/BlockDelimiters: Avoid using `{...}` for multi-line blocks.","cop_name":"Style/BlockDelimiters","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":11160,"end_pos":11170},"message":"Layout/MultilineBlockLayout: Block argument expression is not on the same line as the block start.","cop_name":"Layout/MultilineBlockLayout","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":13004,"end_pos":13010},"message":"Lint/UnusedMethodArgument: Unused method argument - `person`. If it's necessary, use `_` or `_person` as an argument name to indicate that it won't be used.","cop_name":"Lint/UnusedMethodArgument","status":"uncorrected"}]