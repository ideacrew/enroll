name: yard doc generation
on:
  push:

jobs:
  docs_deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v2-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v2-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: Install project gems
        run: |
          bundle config path vendor/bundle
          bundle install  
      - name: Run yard
        run: bundle exec yard doc
      - uses: actions/upload-artifact@v2
        with:
          name: yard-doc
          path: doc
  swagger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '3.6'
      - name: restore Project Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v5-faa-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            v5-faa-
      - name: bundle install
        run: |
          gem update --system --quiet --silent
          bundle config path vendor/bundle
          bundle install
          cd components/financial_assistance
          bundle config path ../../vendor/bundle
          bundle install
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: run webpack
        run: |
          echo bundle config
          bundle config path vendor/bundle
          NODE_ENV=test RAILS_ENV=test ./bin/webpack
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified 
      - name: test engine
        run: |
          root=`pwd -P`
          pip install pyyaml
          cd $root/components/financial_assistance
          bundle config path ../../vendor/bundle
          gem install bundler
          bundle install
          RAILS_ENV=test bundle exec rake app:rswag:specs:swaggerize PATTERN="./spec/requests/financial_assistance/api/v1/applications_spec.rb"
          cd ..
          cd ..
          python swagger-yaml-to-html.py < $root/components/financial_assistance/spec/dummy/components/financial_assistance/v1/swagger.yaml > doc.html
      - uses: actions/upload-artifact@v2
        with:
          name: swagger-docs
          path: doc.html
  hugo-deployment:
    needs: [swagger, docs_deployment]
    runs-on: ubuntu-latest
    steps:
      - uses: nelonoel/branch-name@v1.0.1
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Download swagger-docs
        uses: actions/download-artifact@v2
        with:
          name: swagger-docs
          path: index.html
      - name: Download yard-doc
        uses: actions/download-artifact@v2
        with:
          name: yard-doc
          path: doc
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: cd hugo && npm ci
      - run: sudo snap install hugo --channel=extended
      - run: |
          mv ./doc ./hugo/static/yard
          mv ./index.html ./hugo/static/swagger/index.html
      - run: |
          cd hugo/static/swagger
          ls
      - run: cd hugo && hugo --minify
      - uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ secrets.YARD_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.YARD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YARD_SECRET_ACCESS_KEY }}
          SOURCE_DIR: hugo/public
          DEST_DIR: ${{ env.BRANCH_NAME }}
