name: full check suite
on:
  push:
  schedule:
    - cron: '0 6 * * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  REPORT_PATH: 'ci/cuke-report.json'
  CUCUMBER_SPLIT_CONFIGURATION_PATH: 'ci/cucumber-split-config.json'

jobs:
  rubocop:
    if: contains(github.ref, 'release') == false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - name: Cache Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: bundle install
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
      - name: Run rubocop
        run: |
          git config diff.renameLimit 800
          git fetch --no-tags --depth=1 origin trunk
          bundle exec rubocop-git origin/trunk | grep "no offenses detected"
  view_linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: bundle install
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
      - name: Run View Linter
        run: |
          git fetch --no-tags --depth=1 origin trunk
          bundle exec rake view_translations_linter:lint_git_difference_changed_lines
  brakeman:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - run: gem install brakeman
      - run: brakeman -i config/brakeman.ignore
      - name: Run Brakeman In Components
        run: |
          for test_dir in `ls -1 components`; do
            cd components/$test_dir
            brakeman -i config/brakeman.ignore
            cd ../..
          done
  build-assets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'
      - name: Restore project gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: Install project gems
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: Install node dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: compile assets
        run: RAILS_ENV=test bundle exec rake assets:precompile
  engines:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        engine-name:
          [
            'benefit_markets',
            'notifier',
            'sponsored_benefits',
            'transport_gateway',
            'transport_profiles',
            'financial_assistance',
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'
      - name: restore Project Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v5-${{ matrix.engine-name }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            v5-${{ matrix.engine-name }}-
      - name: bundle install
        run: |
          gem update --system --quiet --silent
          bundle config path vendor/bundle
          bundle install
          echo switching to ${{ matrix.engine-name }}
          cd components/${{ matrix.engine-name }}
          bundle config path ../../vendor/bundle
          echo testing caching
          echo installing ${{ matrix.engine-name }} dependencies
          bundle install
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: run webpack
        run: |
          echo bundle config
          bundle config path vendor/bundle
          NODE_ENV=test RAILS_ENV=test ./bin/webpack
      - name: test engine
        run: |
          root=`pwd -P`
          echo $root/components/${{ matrix.engine-name }}
          cd $root/components/${{ matrix.engine-name }}
          bundle config path ../../vendor/bundle
          bundle exec rspec
  benefit-sponsors:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: [1, 2, 3, 4, 5]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'
      - name: Restore Project Gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: benefit_sponsors-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            benefit_sponsors-
      - name: bundle install
        run: |
          gem update --system --quiet --silent
          bundle config path vendor/bundle
          bundle install
          cd components/benefit_sponsors
          bundle config path ../../vendor/bundle
          bundle install
          gem install treye-semaphore_test_boosters --version '2.5.2'
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: yarn install
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: run webpack
        run: |
          bundle config path vendor/bundle
          NODE_ENV=test RAILS_ENV=test ./bin/webpack
      - name: test engine
        env:
          RSPEC_SPLIT_CONFIGURATION_PATH: '${{ github.workspace }}/ci/benefit_sponsors-split-config.json'
        run: |
          cd components/benefit_sponsors
          bundle config path ../../vendor/bundle
          rspec_booster --job ${{ matrix.group }}/${{ strategy.job-total }}
  rspec:
    needs: [view_linter, brakeman]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group:
          [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'
      - name: Restore project gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: Install project gems
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
          gem install treye-semaphore_test_boosters --version '2.5.2'
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: Install node dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run tests
        env:
          RSPEC_SPLIT_CONFIGURATION_PATH: 'ci/rspec-split-config.json'
          TEST_BOOSTERS_RSPEC_TEST_FILE_PATTERN: '{spec,components/benefit_markets,components/benefit_sponsors,components/notifier,components/sponsored_benefits,components/transport_gateway,components/transport_profiles}/**/*_spec.rb'
        run: rspec_booster --job ${{ matrix.group }}/${{ strategy.job-total }}
  cucumber:
    needs: [view_linter, brakeman]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group:
          [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: getong/rabbitmq-action@v1.2
        with:
          rabbitmq version: '3.8.2-management-alpine'
          host port: 5672
          rabbitmq user: 'guest'
          rabbitmq password: 'guest'
          rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'
      - name: Restore project gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v3-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: Install project gems
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
          gem install treye-semaphore_test_boosters --version '2.5.2'
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v14-${{ hashFiles('yarn.lock') }}
      - name: Install node dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run tests
        run: cucumber_booster --job ${{ matrix.group }}/${{ strategy.job-total }}
  quality-workbench:
    needs: [engines, benefit-sponsors, rspec, cucumber]
    if: always()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        check: [engines, benefit-sponsors, rspec, cucumber]
    steps:
      - name: Check build matrix status
        env:
          CHECK: ${{ matrix.check }}
        if: needs[env.CHECK].result != 'success'
        run: exit 1
