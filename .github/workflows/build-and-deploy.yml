name: Build Image and Deploy

on:
  push:
    branches:
      - build-deploy-on-push

jobs:
  build-image:
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
        options: >-
          --health-cmd "rabbitmqctl add_vhost /"
          --health-cmd "rabbitmqctl add_vhost event_source"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Needed for docker build script
      # - uses: getong/rabbitmq-action@v1.2
      #   with:
      #     rabbitmq version: '3.8.2-management-alpine'
      #     host port: 5672
      #     rabbitmq user: 'guest'
      #     rabbitmq password: 'guest'
      #     rabbitmq vhost: '/'
      - uses: wbari/start-mongoDB@v0.2
        with:
          mongoDBVersion: '4.2'

      # Check out repository
      - uses: actions/checkout@v2

      # Provide credentials for AWS
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1

      # Login to Amazon
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # Build Docker Image
      # - name: Build Image
      #   id: build-image
      #   env:
      #     # ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     # ECR_REPOSITORY: rails_app
      #     IMAGE_TAG: ${{ github.sha }}
      #   # run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #   # run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #   run: .docker/build.sh test-$IMAGE_TAG public.ecr.aws/ideacrew/enroll

      # Upload Docker Image to Amazon ECR
      # - name: Upload Image to ECR
      #   id: upload-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: rails_app
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
